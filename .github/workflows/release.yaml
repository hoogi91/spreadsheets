name: "Release new version"
on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
      version:
        description: 'Override version (optional)'
        required: false
        type: string
      latest-release:
        description: 'Is latest release?'
        required: false
        default: true
        type: boolean

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.bump-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ADMIN_TOKEN || secrets.GITHUB_TOKEN }}

      - id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - id: bump-version
        run: |
          VERSION=${{ inputs.version || steps.semvers.outputs[inputs.type] }}
          sed -i -E "s/'[0-9]+.[0-9]+.[0-9]+'/'$VERSION'/g" ext_emconf.php
          sed -i -E "s/[0-9]+.[0-9]+.[0-9]+/$VERSION/g" Documentation/Settings.cfg
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - id: autocommit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: https://github.com/hoogi91/spreadsheets/releases/tag/${{ steps.bump-version.outputs.version }}
      - run: gh release create ${{ steps.bump-version.outputs.version }} --generate-notes --draft --target=${{ steps.autocommit.outputs.commit_hash || github.sha }} --latest=${{ inputs.latest-release }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    environment: 'github'
    needs: [ bump-version ]
    steps:
      - uses: actions/checkout@v4
      - run: gh release edit ${{ needs.bump-version.outputs.version }} --draft=false --latest=${{ inputs.latest-release }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Fetch and checkout the newly created tag
      - name: Fetch and checkout tag
        run: |
          git fetch --tags --force
          git checkout ${{ needs.bump-version.outputs.version }}
      
      - uses: tomasnorre/typo3-upload-ter@v2
        with:
          api-token: ${{ secrets.TYPO3_API_TOKEN }}
